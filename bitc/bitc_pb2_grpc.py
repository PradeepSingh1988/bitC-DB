# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from bitc import bitc_pb2 as bitc__pb2


class BitCdbKeyValueServiceStub(object):
    """BitC-DB KV Service Definition."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get = channel.unary_unary(
            "/BitCdbKeyValueService/get",
            request_serializer=bitc__pb2.GetRequest.SerializeToString,
            response_deserializer=bitc__pb2.GetReply.FromString,
        )
        self.put = channel.unary_unary(
            "/BitCdbKeyValueService/put",
            request_serializer=bitc__pb2.PutRequest.SerializeToString,
            response_deserializer=bitc__pb2.PutReply.FromString,
        )
        self.delete = channel.unary_unary(
            "/BitCdbKeyValueService/delete",
            request_serializer=bitc__pb2.DeleteRequest.SerializeToString,
            response_deserializer=bitc__pb2.DeleteReply.FromString,
        )


class BitCdbKeyValueServiceServicer(object):
    """BitC-DB KV Service Definition."""

    def get(self, request, context):
        """RequestVote handler"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_BitCdbKeyValueServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "get": grpc.unary_unary_rpc_method_handler(
            servicer.get,
            request_deserializer=bitc__pb2.GetRequest.FromString,
            response_serializer=bitc__pb2.GetReply.SerializeToString,
        ),
        "put": grpc.unary_unary_rpc_method_handler(
            servicer.put,
            request_deserializer=bitc__pb2.PutRequest.FromString,
            response_serializer=bitc__pb2.PutReply.SerializeToString,
        ),
        "delete": grpc.unary_unary_rpc_method_handler(
            servicer.delete,
            request_deserializer=bitc__pb2.DeleteRequest.FromString,
            response_serializer=bitc__pb2.DeleteReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "BitCdbKeyValueService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class BitCdbKeyValueService(object):
    """BitC-DB KV Service Definition."""

    @staticmethod
    def get(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BitCdbKeyValueService/get",
            bitc__pb2.GetRequest.SerializeToString,
            bitc__pb2.GetReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def put(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BitCdbKeyValueService/put",
            bitc__pb2.PutRequest.SerializeToString,
            bitc__pb2.PutReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def delete(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/BitCdbKeyValueService/delete",
            bitc__pb2.DeleteRequest.SerializeToString,
            bitc__pb2.DeleteReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
